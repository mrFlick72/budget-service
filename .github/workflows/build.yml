name: build

on:
  push: { }
  workflow_dispatch: { }

jobs:
  provisioning:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: install graalVM
        run: |
          wget https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.2.0/graalvm-ce-java17-linux-amd64-22.2.0.tar.gz
          tar -xvzf graalvm-ce-java17-linux-amd64-22.2.0.tar.gz
          mv graalvm-ce-java17-linux-amd64-22.2.0/ /usr/lib/jvm/
          cd /usr/lib/jvm
          ln -s graalvm-ce-java17-linux-amd64-22.2.0
          export JAVA_HOME=/usr/lib/jvm/graalvm-ce-java17-linux-amd64-22.2.0
          export PATH=$JAVA_HOME/bin:$PATH
          gu install native-image
          sudo apt-get install libz-dev
          sudo apt-get update && sudo apt-get upgrade
          sudo apt-get install build-essential
          sudo apt-get install aptitude
          sudo apt-get install libstdc++6

      - name: build testing environment
        run: |
          cd src/test/resources
          docker-compose up &
          sleep 60s
          sudo chown -R $USER:$USER *
          chmod 777 -R docker/dynamodb

      - name: Build
        run: |
          export JAVA_HOME=/usr/lib/jvm/graalvm-ce-java17-linux-amd64-22.2.0
          export PATH=$JAVA_HOME/bin:$PATH
          mvn clean install -q -Pnative

      - name: docker push
        run: |
          if [[ ${GITHUB_REF##*/} == 'master' ]]
          then
            DOCKER_TAG="latest"
          else
            DOCKER_TAG="${GITHUB_REF##*/}"
          fi
          echo "$DOCKER_TAG"
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker build . -t mrflick72/budget-service-k8s:$DOCKER_TAG
          docker push mrflick72/budget-service-k8s:$DOCKER_TAG
